@using HouseRentingSystem.Data.Models
@using HouseRentingSystem.Web.Infrastructure.Extentions;
@using HouseRentingSystems.Services.Data.Interfaces;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IAgentService AgentService
@inject IUserService UserService
@{

    bool IsUserAgent = await AgentService.AgentExistsByUserId(this.User.GetId()!);
    string userFullName = await UserService.GetFullNameByEmailAsync(User.Identity?.Name!);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userFullName</a>
        </li>
        @if (!IsUserAgent)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Agent</a>
            </li>
        }
        
   
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
        </li>
    }
</ul>
